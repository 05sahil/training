********CLASS MANAGEMENT SYSTEM********

Total no. of tables: 06

*******DB STRUCTURE:*******

1. instructors
	column-name	data-type	constraint
	id		smallint	primary key
	name		text		not null

2. subjects
	column-name	data-type	constraint
	id		smallint	primary key
	name		text		not null	

3. teaches
	column-name	data-type	constraint
	instructor_id	smallint	foreign key instructors(id)
	subject_id	smallint	foreign key classes(id)	

4. classes
	column-name	data-type	constraint
	id		smallint	primary key
	instructor_id	smallint	foreign key instructors(id)
	subject_id	smallint	foreign key classes(id)
	time		time		not null
	roomno.		varchar(10)	not null
	day		varchar(15)	not null

5.substitutions
	column-name	data-type	constraint
	id		serial		primary key
	class_id	smallint	foreign key classes(id)
	instructor_id	smallint	foreign key instructors(id)
	date		date		not null

6.requests
	column-name	data-type	constraint
	id		serial		primary key
	by_id		smallint	foreign key instructors(id)
	to_id		smallint	foreign key instructors(id)
	class_id	smallint	foreign key classes(id)
	answer		varchar(3)	
	date		date		not null


7.FUNCTION class_changer(): 

=> when an instructor accepts the request for substitution then this function will updates the answer column in table requests and adds the respective class into substitutions table.

create or replace function class_changer()
returns trigger as
$BODY$
begin
if NEW.answer='yes' then
insert into substitutions (class_id,instructor_id,date) values (OLD.class_id,OLD.to_id,OLD.date);
end if;
return NEW;
end;
$BODY$
language plpgsql;


8.TRIGGER class_change:

=> Calls the function class_changer whenever update event is being fired on table requests and answer being updated to 'yes'.

create trigger class_change
before update
on requests
for each row
execute procedure class_changer();


********DATBASE:********

postgres=# create database class_management_system
postgres-# ;

CREATE DATABASE


********TABLE INSTRUCTORS:********

class_management_system=# create table instructors (id smallint primary key, name text not null)
class_management_system-# ;
CREATE TABLE


********TABLE SUBJECTS:********

class_management_system=# create table subjects (id smallint primary key, name text not null);
CREATE TABLE


********TABLE TEACHES:********

class_management_system=# create table teaches (instructor_id smallint, subject_id smallint);CREATE TABLE

class_management_system=# alter table teaches add constraint fkey_ins_id foreign key (instructor_id) references instructors(id);
ALTER TABLE

class_management_system=# alter table teaches add constraint fkey_sub_id foreign key (subject_id) references subjects(id);
ALTER TABLE


********TABLE CLASSES:********

class_management_system=# create table classes (id smallint primary key, instructor_id smallint references instructors (id), subject_id smallint references subjects (id), time_ time not null, room_no varchar (10) not null, day varchar (15) not null);
CREATE TABLE


********TABLE SUBSTITUTIONS:********

class_management_system=# create table substitutions (id serial primary key,class_id smallint references classes(id), instructor_id smallint references instructors (id));
CREATE TABLE


********INSERTION:********

class_management_system=# insert into instructors values (1,'John'), (2,'Tim'), (3,'Lucy');
INSERT 0 3

class_management_system=# select * from instructors
class_management_system-# ;
 id | name 
----+------
  1 | John
  2 | Tim
  3 | Lucy
(3 rows)

class_management_system=# insert into subjects values (21,'Maths'), (22,'Science'), (23,'English');
INSERT 0 3

class_management_system=# select * from subjects
class_management_system-# ;
 id |  name   
----+---------
 21 | Maths
 22 | Science
 23 | English
(3 rows)

class_management_system=# insert into teaches values (1,21), (1,22), (2,23), (3,23), (3,21), (2,21);
INSERT 0 6

class_management_system=# select * from teaches;

 instructor_id | subject_id 
---------------+------------
             1 |         21
             1 |         22
             2 |         23
             3 |         23
             3 |         21
             2 |         21
(6 rows)


class_management_system=# insert into classes values(101,1,22,'9:00','A102','monday');
INSERT 0 1

class_management_system=# insert into classes values (102,2,23,'10:00','A105','monday'),(103,1,21,'11:00','A101','tuesday'),(104,3,23,'9:00','A102','tuesday'),(105,2,21,'14:00','A108','wednesday');
INSERT 0 4

class_management_system=# select * from classes;

 id  | instructor_id | subject_id |  time_   | room_no |    day    
-----+---------------+------------+----------+---------+-----------
 101 |             1 |         22 | 09:00:00 | A102    | monday
 102 |             2 |         23 | 10:00:00 | A105    | monday
 103 |             1 |         21 | 11:00:00 | A101    | tuesday
 104 |             3 |         23 | 09:00:00 | A102    | tuesday
 105 |             2 |         21 | 14:00:00 | A108    | wednesday
(5 rows)



********TABLE REQUESTS:********

class_management_system=# create table requests (id serial primary key, by_id smallint references instructors(id), to_id smallint references instructors(id), class_id smallint references classes(id), answer varchar(3), date date not null);
CREATE TABLE


********FUNCTION:********

test=# create or replace function class_changer()
returns trigger as
$BODY$
begin
if NEW.answer='yes' then
insert into substitutions (class_id,instructor_id,date) values (OLD.class_id,OLD.to_id,OLD.date);
end if;
return NEW;
end;
$BODY$
language plpgsql;
CREATE FUNCTION


********TRIGGER:********

create trigger class_change
before update
on requests
for each row
execute procedure class_changer();
CREATE TRIGGER


********INSERTION and firing event for trigger********

insert into requests (by_id,to_id,class_id,date) values(1,3,103,'2020-02-04'); 
INSERT 0 1

class_management_system=# alter table substitutions add column date date not null;

class_management_system=# insert into requests (by_id,to_id,class_id,date) values(1,2,103,'2020-02-04'); 
INSERT 0 1

class_management_system=# select * from requests;
 id | by_id | to_id | class_id | answer |    date    
----+-------+-------+----------+--------+------------
  1 |     1 |     3 |      103 | yes    | 2020-02-04
  2 |     1 |     2 |      103 |        | 2020-02-04
(2 rows)

class_management_system=# update requests set answer='no' where id = 2;UPDATE 1

class_management_system=# select * from substitutions; id | class_id | instructor_id |    date    
----+----------+---------------+------------
  1 |      103 |             3 | 2020-02-04
(1 row)




