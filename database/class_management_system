DATBASE:
postgres=# create database class_management_system
postgres-# ;

CREATE DATABASE

TABLE INSTRUCTORS:
class_management_system=# create table instructors (id smallint primary key, name text not null)
class_management_system-# ;
CREATE TABLE

TABLE SUBJECTS:
class_management_system=# create table subjects (id smallint primary key, name text not null);
CREATE TABLE

TABLE TEACHES:
class_management_system=# create table teaches (instructor_id smallint, subject_id smallint);CREATE TABLE

class_management_system=# alter table teaches add constraint fkey_ins_id foreign key (instructor_id) references instructors(id);
ALTER TABLE

class_management_system=# alter table teaches add constraint fkey_sub_id foreign key (subject_id) references subjects(id);
ALTER TABLE

TABLE CLASSES:
class_management_system=# create table classes (id smallint primary key, instructor_id smallint references instructors (id), subject_id smallint references subjects (id), time_ time not null, room_no varchar (10) not null, day varchar (15) not null);
CREATE TABLE

TABLE SUBSTITUTIONS:
class_management_system=# create table substitutions (id serial primary key,class_id smallint references classes(id), instructor_id smallint references instructors (id));
CREATE TABLE

INSERTION:
class_management_system=# insert into instructors values (1,'John'), (2,'Tim'), (3,'Lucy');
INSERT 0 3

class_management_system=# select * from instructors
class_management_system-# ;
 id | name 
----+------
  1 | John
  2 | Tim
  3 | Lucy
(3 rows)

class_management_system=# insert into subjects values (21,'Maths'), (22,'Science'), (23,'English');
INSERT 0 3

class_management_system=# select * from subjects
class_management_system-# ;
 id |  name   
----+---------
 21 | Maths
 22 | Science
 23 | English
(3 rows)

class_management_system=# insert into teaches values (1,21), (1,22), (2,23), (3,23), (3,21), (2,21);
INSERT 0 6

class_management_system=# select * from teaches;

 instructor_id | subject_id 
---------------+------------
             1 |         21
             1 |         22
             2 |         23
             3 |         23
             3 |         21
             2 |         21
(6 rows)


class_management_system=# insert into classes values(101,1,22,'9:00','A102','monday');
INSERT 0 1

class_management_system=# insert into classes values (102,2,23,'10:00','A105','monday'),(103,1,21,'11:00','A101','tuesday'),(104,3,23,'9:00','A102','tuesday'),(105,2,21,'14:00','A108','wednesday');
INSERT 0 4

class_management_system=# select * from classes;

 id  | instructor_id | subject_id |  time_   | room_no |    day    
-----+---------------+------------+----------+---------+-----------
 101 |             1 |         22 | 09:00:00 | A102    | monday
 102 |             2 |         23 | 10:00:00 | A105    | monday
 103 |             1 |         21 | 11:00:00 | A101    | tuesday
 104 |             3 |         23 | 09:00:00 | A102    | tuesday
 105 |             2 |         21 | 14:00:00 | A108    | wednesday
(5 rows)


TABLE REQUESTS:

class_management_system=# create table requests (id serial primary key, by_id smallint references instructors(id), to_id smallint references instructors(id), class_id smallint references classes(id), answer varchar(3), date date not null);
CREATE TABLE

FUNCTION:
test=# create or replace function class_changer()
returns trigger as
$BODY$
begin
if NEW.answer='yes' then
insert into substitutions (class_id,ins_id) values (OLD.class_id,OLD.to_id);
end if;
return NEW;
end;
$BODY$
language plpgsql;
CREATE FUNCTION

TRIGGER:
create trigger class_change
before update
on requests
for each row
execute procedure class_changer();
CREATE TRIGGER

insert into requests (by_id,to_id,class_id,date) values(1,3,103,'2020-02-04'); 
INSERT 0 1





