
2.7.0 :004 > require 'matrix'
 => true 

2.7.0 :005 > x = Matrix[[2,4,5],[12,23,43],[56,67,78]]
2.7.0 :006 > x
 => Matrix[[2, 4, 5], [12, 23, 43], [56, 67, 78]] 


2.7.0 :010 > y = Matrix.build(2,3){(rand).round}
2.7.0 :011 > y
 => Matrix[[1, 1, 1], [0, 0, 1]] 


2.7.0 :012 > v = Matrix.column_vector([2,4,6,8,10])
2.7.0 :013 > v
 => Matrix[[2], [4], [6], [8], [10]] 


2.7.0 :016 > c = Matrix.columns([[2,4,6],[8,10,12]])
2.7.0 :017 > c
 => Matrix[[2, 8], [4, 10], [6, 12]] 


2.7.0 :018 > i = Matrix.identity(3)
2.7.0 :019 > i
 => Matrix[[1, 0, 0], [0, 1, 0], [0, 0, 1]] 


2.7.0 :025 > d = Matrix.diagonal(3,6,9)
2.7.0 :026 > d
 => Matrix[[3, 0, 0], [0, 6, 0], [0, 0, 9]] 


2.7.0 :038 > Matrix.hstack(x,d)
 => Matrix[[2, 4, 5, 3, 0, 0], [12, 23, 43, 0, 6, 0], [56, 67, 78, 0, 0, 9]] 


2.7.0 :039 > Matrix.vstack(x,d)
 => Matrix[[2, 4, 5], [12, 23, 43], [56, 67, 78], [3, 0, 0], [0, 6, 0], [0, 0, 9]] 


2.7.0 :040 > Matrix.rows([[1,2,3],[10,20,30],[40,50,60]])
 => Matrix[[1, 2, 3], [10, 20, 30], [40, 50, 60]] 


2.7.0 :042 > Matrix.scalar(3,75)
 => Matrix[[75, 0, 0], [0, 75, 0], [0, 0, 75]] 


2.7.0 :041 > Matrix.row_vector([10,20,30,40])
 => Matrix[[10, 20, 30, 40]] 


2.7.0 :049 > x.rank
 => 3

 
2.7.0 :050 > x.trace
 => 103 


2.7.0 :047 > x.transpose
 => Matrix[[2, 12, 56], [4, 23, 67], [5, 43, 78]] 


2.7.0 :055 > d.inverse
 => Matrix[[(1/3), (0/1), (0/1)], [(0/1), (1/6), (0/1)], [(0/1), (0/1), (1/9)]] 


2.7.0 :057 > x
 => Matrix[[2, 4, 5], [12, 23, 43], [56, 67, 78]] 
2.7.0 :056 > x.determinant
 => 1294 




